name: Deploy to Amazon EC2

on:
  push:
    branches:
      - master

# 본인이 설정한 값을 여기서 채워넣습니다.
# 리전, 버킷 이름, CodeDeploy 앱 이름, CodeDeploy 배포 그룹 이름
env:
  PROJECT_NAME: cooperation_project
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: mini-operation-project-8-bucket
  CODE_DEPLOY_APPLICATION_NAME: my-codedeploy-app
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: my-codedeplroy-deployment-group

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Setup Java JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
       
       ## gitignore한 파일 생성해주기
       ## create application.properties
      - name: make application-aws.properties
        if: true # branch가 develop일 때
        run: |
          # spring의 resources 경로로 이동
          cd ./src/main/resources
          touch ./application-aws.properties
          # GitHub-Actions에서 설정한 값을 application-dev.properties 파일에 쓰기
          echo "${{ secrets.PROPERTIES }}" > ./application-aws.properties
        shell: bash
		
        #gradlew 파일 실행권한 설정
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash
      
        #빌드 시작
      - name: Build with Gradle
        run: ./gradlew build
        shell: bash
        
        #프로젝트 zip파일로 압축
      - name: Make Zip File
        run: zip -qq -r ./$GITHUB_SHA.zip .
        shell: bash
      
        #aws 접근 id, key
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
      	
        # s3에 압축한 zip파일 업로드
      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$BUCKET_NAME/$PROJECT_NAME/$GITHUB_SHA.zip
		
        # s3에 업로드한 파일 code Deploy에서 배포 요청
      - name: Code Deploy
        run: aws deploy create-deployment --application-name $CODE_DEPLOY_APP_NAME --deployment-config-name CodeDeployDefault.OneAtATime --deployment-group-name $DEPLOYMENT_GROUP_NAME --s3-location bucket=$BUCKET_NAME,bundleType=zip,key=$PROJECT_NAME/$GITHUB_SHA.zip
